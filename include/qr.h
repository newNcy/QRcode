#ifndef _QR_H
#define _QR_H
#include <stdio.h>
#include <malloc.h>
#include <string.h>
enum ec_level {
    L,
    M,
    Q,
    H,
    EC_LEVEL_MAX
};
enum qr_mode {
    NUM,
    ALPHA_NUM,
    BYTE,
    KANJI,
    QR_MODE_MAX
};

#define QR_VERSION(X)  (X-1)
#define QR_VERSION_MAX 40
#define QR_SIZE(X)     (21+4*(QR_VERSION(X)))



/*
 * qr code 的结构体
 */
struct _qr_
{
    int ver;
    int ec;
    int size;
    enum qr_mode mode;
    char *code_words;
    char *data;
    char *matrix;
};
typedef struct _qr_* QR;

struct _pos
{
    int x;
    int y;
};
typedef struct _pos pos;
/*
 * 40个版本的byte模式下的所有最大容量
 */
static  int capacity
[QR_VERSION_MAX] //40 40个版本
[QR_MODE_MAX]    //4  4种编码模式
[EC_LEVEL_MAX]   //4  4种纠错等级
= {
    {{},{},{  17,  14,  11,   7},{} },//v1
    {{},{},{  32,  26,  20,  14},{} },//v2
    {{},{},{  53,  42,  32,  24},{} },//v3
    {{},{},{  78,  62,  46,  34},{} },//v4
    {{},{},{ 106,  84,  60,  44},{} },//v5
    {{},{},{ 134, 106,  74,  58},{} },//v6
    {{},{},{ 154, 122,  86,  64},{} },//v7
    {{},{},{ 192, 152, 108,  84},{} },//v8
    {{},{},{ 230, 180, 130,  98},{} },//v9
    {{},{},{ 271, 213, 151, 119},{} },//v10
    {{},{},{ 321, 251, 177, 137},{} },//v11
    {{},{},{ 367, 287, 203, 155},{} },//v12
    {{},{},{ 425, 331, 241, 177},{} },//v13
    {{},{},{ 458, 362, 258, 194},{} },//v14
    {{},{},{ 520, 412, 292, 220},{} },//v15
    {{},{},{ 586, 450, 322, 250},{} },//v16
    {{},{},{ 644, 504, 364, 280},{} },//v17
    {{},{},{ 718, 560, 394, 310},{} },//v18
    {{},{},{ 792, 624, 442, 338},{} },//v19
    {{},{},{ 858, 666, 482, 382},{} },//v20
    {{},{},{ 929, 711, 509, 403},{} },//v21
    {{},{},{1003, 779, 565, 439},{} },//v22
    {{},{},{1091, 857, 611, 461},{} },//v23
    {{},{},{1171, 911, 661, 511},{} },//v24
    {{},{},{1273, 997, 715, 535},{} },//v25
    {{},{},{1367,1059, 751, 593},{} },//v26
    {{},{},{1465,1125, 805, 625},{} },//v27
    {{},{},{1528,1190, 868, 658},{} },//v28
    {{},{},{1628,1264, 908, 698},{} },//v29
    {{},{},{1732,1370, 982, 742},{} },//v30
    {{},{},{1840,1452,1030, 790},{} },//v31
    {{},{},{1952,1538,1112, 842},{} },//v32
    {{},{},{2068,1628,1168, 898},{} },//v33
    {{},{},{2188,1722,1228, 958},{} },//v34
    {{},{},{2303,1809,1283, 983},{} },//v35
    {{},{},{2431,1911,1351,1051},{} },//v36
    {{},{},{2563,1989,1423,1093},{} },//v37
    {{},{},{2699,2099,1499,1139},{} },//v38
    {{},{},{2809,2213,1579,1219},{} },//v39
    {{},{},{2953,2331,1663,1273},{} },//v40
};

/* 
 * 小块回字的中心点坐标
 */
static int align_location[QR_VERSION_MAX] [7] = {
    {},
    {6,	18},
    {6,	22},
    {6,	26},
    {6,	30},
    {6,	34},
    {6,	22,	38},
    {6,	24,	42},
    {6,	26,	46},
    {6,	28,	50},
    {6,	30,	54},
    {6,	32,	58},
    {6,	34,	62},
    {6,	26,	46,	66},
    {6,	26,	48,	70},
    {6,	26,	50,	74},
    {6,	30,	54,	78},
    {6,	30,	56,	82},
    {6,	30,	58,	86},
    {6,	34,	62,	90},
    {6,	28,	50,	72,	94},
    {6,	26,	50,	74,	98},
    {6,	30,	54,	78,	102},
    {6,	28,	54,	80,	106},
    {6,	32,	58,	84, 110},
    {6,	30,	58,	86,	114},
    {6,	34,	62,	90,	118},
    {6,	26,	50,	74,	98 , 122},
    {6,	30,	54,	78,	102, 126},
    {6,	26,	52,	78,	104, 130},
    {6,	30,	56,	82,	108, 134},
    {6,	34,	60,	86,	112, 138},
    {6,	30,	58,	86,	114, 142},
    {6,	34,	62,	90,	118, 146},
    {6,	30,	54,	78,	102, 126, 150},
    {6,	24,	50,	76,	102, 128, 154},
    {6,	28,	54,	80,	106, 132, 158},
    {6,	32,	58,	84,	110, 136, 162},
    {6,	26,	54,	82,	110, 138, 166},
    {6,	30,	58,	86,	114, 142, 170}
};



/*
 * 为字符串生成二维码
 */
QR qr_create(char bytes[],enum ec_level);

/*
 * 显示二维码
 */
void qr_view(QR qr);

/*
 * 释放二维码
 */
void qr_destroy(QR qr);
#endif
